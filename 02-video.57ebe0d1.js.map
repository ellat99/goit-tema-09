{"mappings":"YAAA,IAAAA,EACMC,SAAMC,cAAY,UAClBC,EAASC,UAAUJ,GAIzBK,GAFMC,aAAaC,QAAa,iBAEjB,GAEfC,QAAQC,IAAI,aAAcC,WACtBA,UAAY,IACdL,EAAcK,WAEhBP,EAAOQ,GACL,aACAC,UAAS,WACPT,EACGU,iBACAC,MAAK,SAAUC,GACdV,EAAcU,C,IAEfC,OAAM,SAAUC,GACfT,QAAQC,IAAIQ,EAAQ,W,IAExBX,aAAaY,QAAQ,gBAAiBb,EAAYc,W,GACjD,K","sources":["src/js/02-video.js"],"sourcesContent":["/**Aici se importă funcția throttle din biblioteca lodash.throttle. Funcția throttle este utilizată pentru a limita numărul de apeluri ale unei funcții, astfel încât să nu fie apelată în mod excesiv. */\nconst iframe = document.querySelector('iframe');\nconst player = newPlayer(iframe);\n/**Această instanță player va permite să controlați videoclipul Vimeo. */\nconst savedVideo = localStorage.getItem('video-current');\n/**se recupereze timpul salvat din localStorage utilizând cheia 'videoplayer-current-time'. Acest timp salvat reprezintă ultimul timp la care s-a oprit videoclipul. */\nlet currentTime = 0;\n//urmareste timpul curent de redare al videoclipului.\nconsole.log('savedTime=', savedTime);\nif (savedTime > 0) {\n  currentTime = savedTime;\n}\nplayer.on(\n  'timeupdate',\n  throttle(() => {\n    player\n      .getCurrentTime()\n      .then(function (seconds) {\n        currentTime = seconds;\n      })\n      .catch(function (error) {\n        console.log(error + 'occurred');\n      });\n    localStorage.setItem('video-current', currentTime.toString());\n  }, 1000)\n);\n"],"names":["$5a94271ad32ea534$var$iframe","document","querySelector","$5a94271ad32ea534$var$player","newPlayer","$5a94271ad32ea534$var$currentTime","localStorage","getItem","console","log","savedTime","on","throttle","getCurrentTime","then","seconds","catch","error","setItem","toString"],"version":3,"file":"02-video.57ebe0d1.js.map"}